
// Updated populateStageBasesWithParticipants function with worn items support
function populateStageBasesWithParticipants(participants, playerData) {
  console.log('🎨 Step 2C - Populating stage bases...');
  
  const stageBases = document.querySelectorAll('.stage-base');
  
  participants.forEach((participant, index) => {
    if (index >= stageBases.length) {
      console.warn(`⚠️ Not enough stage bases for participant ${index + 1}`);
      return;
    }
    
    const stageBase = stageBases[index];
    const isOwnCat = participant.playerId === playerData.playerId && participant.catId === playerData.catId;
    
    console.log(`🎨 Step 2C - Populating stage ${index + 1}:`, participant, isOwnCat ? '(YOUR CAT)' : '');
    
    // Show real cat sprite using server data
    const catSprite = stageBase.querySelector('.cat-sprite');
    if (catSprite) {
      if (participant.catSpriteUrl) {
        catSprite.src = participant.catSpriteUrl;
        console.log(`✅ Set cat sprite URL for stage ${index + 1}:`, participant.catSpriteUrl.substring(0, 50) + '...');
      } else {
        // Fallback to placeholder if no sprite URL
        catSprite.src = '../assets/cat-placeholder.png';
        console.warn(`⚠️ No sprite URL for stage ${index + 1}, using placeholder`);
      }
      catSprite.style.display = 'block';
    }
    
    // Set cat name using server data
    const catNameElement = stageBase.querySelector('.cat-name');
    if (catNameElement) {
      catNameElement.textContent = participant.catName;
      console.log(`✅ Set cat name for stage ${index + 1}:`, participant.catName);
    }
    
    // Set username using server data  
    const usernameElement = stageBase.querySelector('.username');
    if (usernameElement) {
      usernameElement.textContent = participant.username;
      console.log(`✅ Set username for stage ${index + 1}:`, participant.username);
    }
    
    // TASK 3: Render worn items on top of cat sprite
    if (participant.wornItems && participant.wornItems.length > 0) {
      console.log(`👔 Stage ${index + 1} has ${participant.wornItems.length} worn items:`, participant.wornItems);
      renderWornItems(stageBase, participant.wornItems, index);
    } else {
      console.log(`ℹ️ Stage ${index + 1} has no worn items`);
    }
    
    // Mark own cat for special styling
    if (isOwnCat) {
      stageBase.classList.add('own-cat');
      console.log(`🏷️ Marked stage ${index + 1} as own cat`);
    }
    
    // Store participant data on the element for click handling
    stageBase.dataset.participantId = participant.playerId;
    stageBase.dataset.catId = participant.catId;
  });
  
  console.log('✅ Step 2C - Stage bases populated');
}